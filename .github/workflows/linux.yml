name: Linux build

on:
  push:
    paths-ignore:
      - '.clang-format'
      - '.drone.star'
      - '.gitattributes'
      - '.gitignore'
      - '.gdbinit'
      - '.github/*'
      - '.github/*_TEMPLATE/**'
      - '*.md'
      - '*.yml'
      - 'docs/**'
      - 'src/**/*_posix.*'
      - 'src/**/*_windows.*'
      - 'src/**/*_android.*'
      - 'src/**/*_mac.*'
      - 'LICENSE'
  pull_request:
    paths-ignore:
      - '.clang-format'
      - '.drone.star'
      - '.gitattributes'
      - '.gitignore'
      - '.gdbinit'
      - '.github/*'
      - '.github/*_TEMPLATE/**'
      - '*.md'
      - '*.yml'
      - 'docs/**'
      - 'src/**/*_posix.*'
      - 'src/**/*_windows.*'
      - 'src/**/*_android.*'
      - 'src/**/*_mac.*'
      - 'LICENSE'
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y clang-format
      - name: Check Clang-Format Version
        run: clang-format --version
      - name: Lint
        run: ./xb lint --all

  build-linux:
    name: Build (Linux)
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang libc++-dev libc++abi-dev libgtk-3-dev libpthread-stubs0-dev \
            liblz4-dev libx11-dev libx11-xcb-dev libvulkan-dev libsdl2-dev \
            libiberty-dev libunwind-dev
      - name: Setup
        run: ./xb setup
      - name: Build
        run: ./xb build --config=release --target=src/xenia-app
      - name: Prepare Artifacts
        run: |
          mkdir -p artifacts/xenia_canary
          cp build/bin/linux/Release/xenia_canary artifacts/xenia_canary/
          cp LICENSE artifacts/xenia_canary/
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: xenia_canary_linux
          path: artifacts/xenia_canary
          if-no-files-found: error
      - name: Create Release
        if: |
          github.repository == 'xenia-canary/xenia-canary' &&
          github.event.action != 'pull_request' &&
          github.ref == 'refs/heads/canary_experimental'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          zip -r xenia_canary.zip artifacts/xenia_canary
          gh release create "${{ github.sha }}" xenia_canary.zip --target "${{ github.sha }}" -t "Linux Build ${{ github.sha }}"
